<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>miracle_DZL的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-16T11:47:38.744Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>miracle_DZL</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用jdbc mysql简单实现职员管理系统</title>
    <link href="http://yoursite.com/2019/11/16/%E5%88%A9%E7%94%A8jdbc%20mysql%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E8%81%8C%E5%91%98%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2019/11/16/利用jdbc mysql简单实现职员管理系统/</id>
    <published>2019-11-16T11:41:18.370Z</published>
    <updated>2019-11-16T11:47:38.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用jdbc-mysql简单实现职员管理系统"><a href="#利用jdbc-mysql简单实现职员管理系统" class="headerlink" title="利用jdbc mysql简单实现职员管理系统"></a>利用jdbc mysql简单实现职员管理系统</h1><h2 id="1-安装mysql数据库，下载jdba的mysql的jar包"><a href="#1-安装mysql数据库，下载jdba的mysql的jar包" class="headerlink" title="1.安装mysql数据库，下载jdba的mysql的jar包"></a>1.安装mysql数据库，下载jdba的mysql的jar包</h2><p>mysql下载：<a href="https://pan.baidu.com/s/1k0146Keg-ugsJihZaRR-Ng" target="_blank" rel="noopener">https://pan.baidu.com/s/1k0146Keg-ugsJihZaRR-Ng</a></p><p>jar包下载：<a href="https://pan.baidu.com/s/1LmbGGtDRVMocT_JWRxYz7A" target="_blank" rel="noopener">https://pan.baidu.com/s/1LmbGGtDRVMocT_JWRxYz7A</a></p><h2 id="2-创建数据库"><a href="#2-创建数据库" class="headerlink" title="2.创建数据库"></a>2.创建数据库</h2><p><img src="http://q0lhqnf0a.bkt.clouddn.com/6.PNG" alt=""></p><h2 id="2-在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add-as-Library…，选择moudle-library点击ok。"><a href="#2-在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add-as-Library…，选择moudle-library点击ok。" class="headerlink" title="2.在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add as Library…，选择moudle library点击ok。"></a>2.在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add as Library…，选择moudle library点击ok。<a id="more"></a></h2><p><img src="http://q0lhqnf0a.bkt.clouddn.com/1.PNG" alt=""></p><p><img src="http://q0lhqnf0a.bkt.clouddn.com/2.PNG" alt=""></p><h2 id="3-创建编写JDBCUtils工具类"><a href="#3-创建编写JDBCUtils工具类" class="headerlink" title="3.创建编写JDBCUtils工具类"></a>3.创建编写JDBCUtils工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chenlun.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件的读取，只需要读取一次即可拿到这些值。使用静态代码块</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String USER = <span class="string">"root"</span>;   <span class="comment">//你数据库的用户名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PSD = <span class="string">"root"</span>;    <span class="comment">//你数据库的密码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String URL = <span class="string">"jdbc:mysql:///system"</span>;  <span class="comment">//数据库</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DRIVER = <span class="string">"com.mysql.jdbc.Driver"</span>;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">//读取资源文件，获取值。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//4. 注册驱动</span></span><br><span class="line">            Class.forName(DRIVER);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 连接对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(URL, USER, PSD);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stmt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Statement stmt, Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stmt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs, Statement stmt, Connection conn)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                rs.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                stmt.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-创建编写增删改查方法接口和实现类"><a href="#4-创建编写增删改查方法接口和实现类" class="headerlink" title="4.创建编写增删改查方法接口和实现类"></a>4.创建编写增删改查方法接口和实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chenlun.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Method</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">package cn.chenlun.control;</span><br><span class="line"></span><br><span class="line">import cn.chenlun.util.JDBCUtils;</span><br><span class="line"></span><br><span class="line">import java.sql.Connection;</span><br><span class="line">import java.sql.ResultSet;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class MethodImpl implements Method &#123;</span><br><span class="line">    @Override</span><br><span class="line">    </span><br><span class="line">    //查询</span><br><span class="line">    public void query() throws SQLException &#123;</span><br><span class="line">        Connection connection = JDBCUtils.getConnection();</span><br><span class="line">        String sql = &quot;select * from inform&quot;;</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        ResultSet resultSet = preparedStatement.executeQuery();</span><br><span class="line">        while (resultSet.next()) &#123;</span><br><span class="line">            String id = resultSet.getString(&quot;id&quot;);</span><br><span class="line">            String name = resultSet.getString(&quot;name&quot;);</span><br><span class="line">            String sex = resultSet.getString(&quot;sex&quot;);</span><br><span class="line">            int queke = resultSet.getInt(&quot;queke&quot;);</span><br><span class="line">            String apartment = resultSet.getString(&quot;apartment&quot;);</span><br><span class="line">            int salary = resultSet.getInt(&quot;salary&quot;);</span><br><span class="line"></span><br><span class="line">            System.out.println(&quot;工号:&quot; + id +&quot;,姓名:&quot; + name + &quot;,性别:&quot; + sex + &quot;,缺课数:&quot; + queke + &quot;,系部:&quot;</span><br><span class="line">            + apartment + &quot;,工资:&quot; + salary);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        JDBCUtils.close(resultSet,preparedStatement,connection);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">//添加</span><br><span class="line">    @Override</span><br><span class="line">    public void add() throws SQLException&#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;输入添加的记录&quot;);</span><br><span class="line">        System.out.println(&quot;工号&quot;);</span><br><span class="line">        String id = sc.next();</span><br><span class="line">        System.out.println(&quot;姓名&quot;);</span><br><span class="line">        String name = sc.next();</span><br><span class="line">        System.out.println(&quot;性别&quot;);</span><br><span class="line">        String sex = sc.next();</span><br><span class="line">        System.out.println(&quot;缺课数量&quot;);</span><br><span class="line">        int queke = sc.nextInt();</span><br><span class="line">        System.out.println(&quot;系部&quot;);</span><br><span class="line">        String apartment = sc.next();</span><br><span class="line">        System.out.println(&quot;基本工资&quot;);</span><br><span class="line">        int salary = sc.nextInt();</span><br><span class="line">        Connection connection = JDBCUtils.getConnection();</span><br><span class="line">        String sql = &quot;insert into inform values (?,?,?,?,?,?)&quot;;</span><br><span class="line">        PreparedStatement pt = connection.prepareStatement(sql);</span><br><span class="line">        pt.setString(1,id);</span><br><span class="line">        pt.setString(2,name);</span><br><span class="line">        pt.setString(3,sex);</span><br><span class="line">        pt.setInt(4,queke);</span><br><span class="line">        pt.setString(5,apartment);</span><br><span class="line">        pt.setInt(6,salary);</span><br><span class="line">        int resultSet = pt.executeUpdate();</span><br><span class="line">        System.out.println(&quot;成功插入&quot;+resultSet+&quot;条记录&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//删除</span><br><span class="line">    @Override</span><br><span class="line">    public void delete() throws SQLException &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        Connection connection = JDBCUtils.getConnection();</span><br><span class="line">        String sql = &quot;delete from inform where name = ?&quot;;</span><br><span class="line">        System.out.println(&quot;你要删除人的姓名:&quot;);</span><br><span class="line">        String s = sc.next();</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setString(1,s);</span><br><span class="line">        int resultSet = preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(&quot;删除了&quot;+resultSet+&quot;条记录&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//修改</span><br><span class="line">    @Override</span><br><span class="line">    public void modify() throws SQLException &#123;</span><br><span class="line">        Scanner scanner = new Scanner(System.in);</span><br><span class="line">        Connection connection = JDBCUtils.getConnection();</span><br><span class="line">        String sql = &quot;update inform set sex=?,queke=?,apartment=?,salary=? where name = ?&quot;;</span><br><span class="line">        System.out.println(&quot;输入你想修改人的姓名&quot;);</span><br><span class="line">        String name = scanner.next();</span><br><span class="line">        System.out.println(&quot;性别&quot;);</span><br><span class="line">        String asex = scanner.next();</span><br><span class="line">        System.out.println(&quot;缺课数&quot;);</span><br><span class="line">        int aqueke = scanner.nextInt();</span><br><span class="line">        System.out.println(&quot;系部&quot;);</span><br><span class="line">        String aapartment = scanner.next();</span><br><span class="line">        System.out.println(&quot;基本工资&quot;);</span><br><span class="line">        int asalary = scanner.nextInt();</span><br><span class="line">        PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        preparedStatement.setString(1,asex);</span><br><span class="line">        preparedStatement.setInt(2,aqueke);</span><br><span class="line">        preparedStatement.setString(3,aapartment);</span><br><span class="line">        preparedStatement.setInt(4,asalary);</span><br><span class="line">        preparedStatement.setString(5,name);</span><br><span class="line">        int resultSet = preparedStatement.executeUpdate();</span><br><span class="line">        System.out.println(&quot;成功修改&quot;+resultSet+&quot;条数据&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-创建编写主类"><a href="#5-创建编写主类" class="headerlink" title="5.创建编写主类"></a>5.创建编写主类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chenlun.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.chenlun.control.MethodImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            ui();</span><br><span class="line">            Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            MethodImpl m = <span class="keyword">new</span> MethodImpl();</span><br><span class="line">            <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">                m.query();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>)</span><br><span class="line">                m.add();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">3</span>)</span><br><span class="line">                m.modify();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">4</span>)</span><br><span class="line">                m.delete();</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                System.out.println(<span class="string">"输入错误 请重新输入:"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ui</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"1.查询员工信息"</span>);</span><br><span class="line">        System.out.println(<span class="string">"2.添加员工信息"</span>);</span><br><span class="line">        System.out.println(<span class="string">"3.修改员工信息"</span>);</span><br><span class="line">        System.out.println(<span class="string">"4.删除员工信息"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最终实现"><a href="#最终实现" class="headerlink" title="最终实现"></a>最终实现</h2><p><img src="http://q0lhqnf0a.bkt.clouddn.com/3.PNG" alt=""></p><p><img src="http://q0lhqnf0a.bkt.clouddn.com/4.PNG" alt=""></p><p>做的比较简陋,也并未使用数据库连接池,和对象的的封装。</p><p>还有改进之处，望见谅。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;利用jdbc-mysql简单实现职员管理系统&quot;&gt;&lt;a href=&quot;#利用jdbc-mysql简单实现职员管理系统&quot; class=&quot;headerlink&quot; title=&quot;利用jdbc mysql简单实现职员管理系统&quot;&gt;&lt;/a&gt;利用jdbc mysql简单实现职员管理系统&lt;/h1&gt;&lt;h2 id=&quot;1-安装mysql数据库，下载jdba的mysql的jar包&quot;&gt;&lt;a href=&quot;#1-安装mysql数据库，下载jdba的mysql的jar包&quot; class=&quot;headerlink&quot; title=&quot;1.安装mysql数据库，下载jdba的mysql的jar包&quot;&gt;&lt;/a&gt;1.安装mysql数据库，下载jdba的mysql的jar包&lt;/h2&gt;&lt;p&gt;mysql下载：&lt;a href=&quot;https://pan.baidu.com/s/1k0146Keg-ugsJihZaRR-Ng&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1k0146Keg-ugsJihZaRR-Ng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;jar包下载：&lt;a href=&quot;https://pan.baidu.com/s/1LmbGGtDRVMocT_JWRxYz7A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pan.baidu.com/s/1LmbGGtDRVMocT_JWRxYz7A&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-创建数据库&quot;&gt;&lt;a href=&quot;#2-创建数据库&quot; class=&quot;headerlink&quot; title=&quot;2.创建数据库&quot;&gt;&lt;/a&gt;2.创建数据库&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://q0lhqnf0a.bkt.clouddn.com/6.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add-as-Library…，选择moudle-library点击ok。&quot;&gt;&lt;a href=&quot;#2-在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add-as-Library…，选择moudle-library点击ok。&quot; class=&quot;headerlink&quot; title=&quot;2.在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add as Library…，选择moudle library点击ok。&quot;&gt;&lt;/a&gt;2.在项目目录下新建文件夹lib，将jar包复制进去，右击lib文件夹选择Add as Library…，选择moudle library点击ok。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>贪心</title>
    <link href="http://yoursite.com/2019/11/07/%E8%B4%AA%E5%BF%83/"/>
    <id>http://yoursite.com/2019/11/07/贪心/</id>
    <published>2019-11-07T12:06:37.739Z</published>
    <updated>2019-11-08T09:12:03.387Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h1><h2 id="分治法的基本思想"><a href="#分治法的基本思想" class="headerlink" title="分治法的基本思想"></a>分治法的基本思想</h2><p>分治法的基本思想是将一个大规模的问题划分为若干个小规模的子问题，这些子问题相互独立且与原问题相同。递归的解决这些子问题，然后将各个子问题的解合并得到原问题的解。</p><a id="more"></a><p>而根据分治法的分割原则，应该把原问题分成多少个子问题才合适呢？没个子问题是否规模相等或怎样才最适当？通过大量实践发现，最好使子问题的规模大致相同，即将问题划分为大小相等的k个子问题比较合适。</p><p><img src="https://img-blog.csdn.net/20161203163252550" alt=""></p><h2 id="二分搜索法"><a href="#二分搜索法" class="headerlink" title="二分搜索法"></a>二分搜索法</h2><p>二分搜索是分治思想的典型例子</p><blockquote><p><strong>二分搜索</strong>（英语：binary search），也称<strong>折半搜索</strong>（英语：half-interval search）、<strong>对数搜索</strong>（英语：logarithmic search），是一种在<strong>有序数组</strong>中查找某一特定元素的搜索<a href="https://baike.baidu.com/item/%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">算法</a>。搜索过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜索过程结束；如果某一特定元素大于或者小于中间元素，则在数组大于或小于中间元素的那一半中查找，而且跟开始一样从中间元素开始比较。如果在某一步骤数组为空，则代表找不到。这种搜索算法每一次比较都使搜索范围缩小一半。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">//while循环的方法</span><br><span class="line">int BinarySearch(int a[],int n,int x)&#123;      //n为元素个数，k为搜索的数</span><br><span class="line">int left = 0；</span><br><span class="line">int right = n-1；</span><br><span class="line">while (left &lt;= right)&#123;</span><br><span class="line">int middle = (left + right)/2;</span><br><span class="line">if (x == a[middle])</span><br><span class="line">return middle;</span><br><span class="line">else if (x&gt;middle)</span><br><span class="line">left = middle + 1;</span><br><span class="line">else</span><br><span class="line">right = middle - 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br><span class="line">//递归的方法(java实现)</span><br><span class="line">public static int BinSreachOfRecursion(int[] arr, int start, int end,int key) &#123; </span><br><span class="line">//start开始 end结束</span><br><span class="line">if(arr == null) &#123;</span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br><span class="line">//这个判断，必不可少，因为它就是递归种植的条件呀~</span><br><span class="line">if(start &gt; end) &#123;</span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br><span class="line">int mid = (end - start)/2 + start;</span><br><span class="line">if(arr[mid] &gt; key)&#123;</span><br><span class="line">return BinSreachOfRecursion(arr, start, mid-1, key);</span><br><span class="line">&#125; else if(arr[mid] &lt; key) &#123;</span><br><span class="line">return BinSreachOfRecursion(arr, mid+1, end, key);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">return mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="大整数乘法"><a href="#大整数乘法" class="headerlink" title="大整数乘法"></a>大整数乘法</h2><p><strong>大整数相乘：</strong>A、B两个整数，A有n位（123456……n），B有m位（123456……m），一般的思路是像最初学习乘法时一样逐位相乘后相加，但是这样做算法的复杂度过高，但这仍然是解题的基本思想。</p><p>既然提到分治，那么如何分，怎么治？下面参考如下</p><p><a href="https://blog.csdn.net/qq_36165148/article/details/81132525" target="_blank" rel="noopener">https://blog.csdn.net/qq_36165148/article/details/81132525</a></p><p>代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">multi</span><span class="params">(<span class="built_in">string</span> A, <span class="built_in">string</span> B)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len_A = A.length();</span><br><span class="line">    <span class="keyword">int</span> len_B = B.length();</span><br><span class="line">    <span class="keyword">if</span> (len_A == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (len_B == <span class="number">1</span>) &#123; </span><br><span class="line">        <span class="comment">//最基本的情况：A和B都是一位数，把A、B从string转为int（我这里用的stringstream），然后相转string型return回去。</span></span><br><span class="line">            ss &lt;&lt; A;</span><br><span class="line">            <span class="keyword">int</span> a;</span><br><span class="line">            ss &gt;&gt; a;</span><br><span class="line">            ss.clear();</span><br><span class="line">            ss &lt;&lt; B;</span><br><span class="line">            <span class="keyword">int</span> b;</span><br><span class="line">            ss &gt;&gt; b;</span><br><span class="line">            ss.clear();</span><br><span class="line">            ss &lt;&lt; b*a;</span><br><span class="line">            <span class="built_in">string</span> str_out;</span><br><span class="line">            ss &gt;&gt; str_out;</span><br><span class="line">            ss.clear();</span><br><span class="line">            <span class="keyword">return</span> str_out;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;  <span class="comment">//A是个位数，B不是的情况下，按照分治的思想把B分开分别与A相乘。</span></span><br><span class="line">            <span class="built_in">string</span> B1, B2;</span><br><span class="line">            B1 = B.substr(<span class="number">0</span>, len_B / <span class="number">2</span>);</span><br><span class="line">            B2 = B.substr(len_B / <span class="number">2</span>);</span><br><span class="line">            <span class="built_in">string</span> AB1 = multi(A, B1);</span><br><span class="line">            <span class="built_in">string</span> AB2 = multi(A, B2);</span><br><span class="line">            <span class="keyword">if</span> (AB2.length() &gt; B2.length()) &#123;</span><br><span class="line">                <span class="built_in">string</span> str = AB2.substr(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">                ss &lt;&lt; str;</span><br><span class="line">                <span class="keyword">int</span> ab2;</span><br><span class="line">                ss &gt;&gt; ab2;</span><br><span class="line">                ss.clear();</span><br><span class="line">                ss &lt;&lt; AB1;</span><br><span class="line">                <span class="keyword">int</span> ab1;</span><br><span class="line">                ss &gt;&gt; ab1;</span><br><span class="line">                ss.clear();</span><br><span class="line">                ss &lt;&lt; ab1 + ab2;</span><br><span class="line">                ss &gt;&gt; AB1;</span><br><span class="line">                ss.clear();</span><br><span class="line">                <span class="keyword">return</span> AB1 + AB2.substr(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> AB1 + AB2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (len_B == <span class="number">1</span>) &#123;  <span class="comment">//B是个位数，A不是的情况与上述A是个位数B不是的情况相同。</span></span><br><span class="line">            <span class="built_in">string</span> A1, A2;</span><br><span class="line">            A1 = A.substr(<span class="number">0</span>, len_A / <span class="number">2</span>);</span><br><span class="line">            A2 = A.substr(len_A / <span class="number">2</span>);</span><br><span class="line">            <span class="built_in">string</span> A1B = multi(A1, B);</span><br><span class="line">            <span class="built_in">string</span> A2B = multi(A2, B);</span><br><span class="line">            <span class="keyword">if</span> (A2B.length() &gt; A2.length()) &#123;</span><br><span class="line">                <span class="built_in">string</span> str = A2B.substr(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">                ss &lt;&lt; str;</span><br><span class="line">                <span class="keyword">int</span> a2b;</span><br><span class="line">                ss &gt;&gt; a2b;</span><br><span class="line">                ss.clear();</span><br><span class="line">                ss &lt;&lt; A1B;</span><br><span class="line">                <span class="keyword">int</span> a1b;</span><br><span class="line">                ss &gt;&gt; a1b;</span><br><span class="line">                ss.clear();</span><br><span class="line">                ss &lt;&lt; a1b + a2b;</span><br><span class="line">                ss &gt;&gt; A1B;</span><br><span class="line">                ss.clear();</span><br><span class="line">                <span class="keyword">return</span> A1B + A2B.substr(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> A1B + A2B;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;  <span class="comment">//A和B都不是个位数，就按照上述方法分治就可以了，只是为了最后相加的时候方便，把返回的四个部分都用0凑成了位数相同的。</span></span><br><span class="line">            <span class="built_in">string</span> A1, A2, B1, B2;</span><br><span class="line">            A1 = A.substr(<span class="number">0</span>, len_A / <span class="number">2</span>);</span><br><span class="line">            A2 = A.substr(len_A / <span class="number">2</span>);</span><br><span class="line">            B1 = B.substr(<span class="number">0</span>, len_B / <span class="number">2</span>);</span><br><span class="line">            B2 = B.substr(len_B / <span class="number">2</span>);</span><br><span class="line">            <span class="built_in">string</span> part1_ = multi(A1, B1);</span><br><span class="line">            <span class="function"><span class="built_in">string</span> <span class="title">part1_0</span><span class="params">(A2.length()+B2.length(), <span class="string">'0'</span>)</span></span>;</span><br><span class="line">            part1_ = part1_ + part1_0;</span><br><span class="line">            <span class="built_in">string</span> part2_ = multi(A2, B2);</span><br><span class="line">            <span class="function"><span class="built_in">string</span> <span class="title">part2_00</span><span class="params">(part1_.length() - part2_.length(), <span class="string">'0'</span>)</span></span>;</span><br><span class="line">            part2_ = part2_00 + part2_;</span><br><span class="line">            <span class="built_in">string</span> part3_ = multi(A1, B2);</span><br><span class="line">            <span class="function"><span class="built_in">string</span> <span class="title">part3_0</span><span class="params">(A2.length(), <span class="string">'0'</span>)</span></span>;</span><br><span class="line">            part3_ = part3_ + part3_0;</span><br><span class="line">            <span class="function"><span class="built_in">string</span> <span class="title">part3_00</span><span class="params">(part1_.length() - part3_.length(), <span class="string">'0'</span>)</span></span>;</span><br><span class="line">            part3_ = part3_00 + part3_;</span><br><span class="line">            <span class="built_in">string</span> part4_ = multi(A2, B1);</span><br><span class="line">            <span class="function"><span class="built_in">string</span> <span class="title">part4_0</span><span class="params">(B2.length(), <span class="string">'0'</span>)</span></span>;</span><br><span class="line">            part4_ = part4_ + part4_0;</span><br><span class="line">            <span class="function"><span class="built_in">string</span> <span class="title">part4_00</span><span class="params">(part1_.length() - part4_.length(), <span class="string">'0'</span>)</span></span>;</span><br><span class="line">            part4_ = part4_00 + part4_;</span><br><span class="line">            <span class="keyword">return</span> Plus(part1_, part2_, part3_, part4_);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">原文链接：https:<span class="comment">//blog.csdn.net/qq_36165148/article/details/81132525</span></span><br></pre></td></tr></table></figure><p>我还发现一种很有趣的解法大家可以看看：<a href="https://blog.csdn.net/tjsinor2008/article/details/5625849" target="_blank" rel="noopener">https://blog.csdn.net/tjsinor2008/article/details/5625849</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分治法&quot;&gt;&lt;a href=&quot;#分治法&quot; class=&quot;headerlink&quot; title=&quot;分治法&quot;&gt;&lt;/a&gt;分治法&lt;/h1&gt;&lt;h2 id=&quot;分治法的基本思想&quot;&gt;&lt;a href=&quot;#分治法的基本思想&quot; class=&quot;headerlink&quot; title=&quot;分治法的基本思想&quot;&gt;&lt;/a&gt;分治法的基本思想&lt;/h2&gt;&lt;p&gt;分治法的基本思想是将一个大规模的问题划分为若干个小规模的子问题，这些子问题相互独立且与原问题相同。递归的解决这些子问题，然后将各个子问题的解合并得到原问题的解。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>时间效率管理</title>
    <link href="http://yoursite.com/2019/11/07/%E6%97%B6%E9%97%B4%E6%95%88%E7%8E%87%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2019/11/07/时间效率管理/</id>
    <published>2019-11-07T11:08:51.675Z</published>
    <updated>2019-11-07T12:04:44.187Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://q0lhqnf0a.bkt.clouddn.com/b1.jpg" alt=""></p><h1 id="提高效率的方法——六点优先工作制"><a href="#提高效率的方法——六点优先工作制" class="headerlink" title="提高效率的方法——六点优先工作制"></a>提高效率的方法——六点优先工作制</h1><a id="more"></a><p>偶然间在网络上发现了一种很好的提高效率的方法-六点优先工作制。“六点优先工作制”被管理学界喻为“价值2.5万美金的时间管理方法”，背后还有一个不同寻常的故事，（该故事流传的有多个版本，不过内容大同小异。）</p><blockquote><p>美国伯利恒钢铁公司总裁理查斯· 舒瓦普曾因为公司濒临破产而向效率大师艾维·李咨询求助。近半个小时的交流中，前20分钟艾维·李耐心地听完其焦头烂额般的倾诉，最后请他拿出一张白纸，并让他写下第二天他要做的全部事情。几分钟后，白纸上满满记录了总裁理查斯·舒瓦普几十项要做的工作。</p><p>此时，艾维·李请他仔细考量，并要求他<strong>按事情的重要顺序，分别从“1”到“6”标出六件最重要的事情。</strong>同时告诉他，请他从明天开始，且每天都这样做：每天一开始，请你全力以赴做好标号为“1”的事情，直到它被完成或被完全准备好，然后再全力以赴做标号为“2”的事，以次类推……</p><p>艾维·李认为<strong>，一般情况下，如果人们每天都能全力以赴完成六件最重要的事，那么他一定是一位高效率人士。</strong></p><p>他请伯利恒总裁理查斯· 舒瓦普自己先按此方法试行，并建议他：“若您在坚持使用后，认为它有效，可将此法推行至您的高层管理人员，若还有效，继续向下推行，直至公司每一位员工。</p><p>如果您或您公司的每一位员工，每一天、每一分、每一秒都在做最重要即最有生产力的事情，假以时日，可以想象，会有什么成就?”</p><p>一年后，作为此次咨询的报酬，艾维利收到了一张来自伯利恒公司的2.5万美金的支票。</p><p>五年后，伯利恒钢铁公司一跃成为当时全美最大的私营钢铁公司。查斯· 舒瓦普常对朋友说：“我和整个团队坚持拣最重要的事情先做，我认为这是我的公司多年来最有价值的一笔投资!”</p></blockquote><p>简而言之，具体方法就是：</p><p><strong>1. 在前一天晚上写下第二天要做的全部事情，对目标、任务、会议等事件分别按优先级进行排序。</strong></p><p><strong>2. 化整为零，把大的、艰难的任务细分为小的、容易的部分。</strong></p><p><strong>3. 从优先级最高的事物着手。按事情的重要顺序，分别从“1”到“6”标出六件最重要的事情。</strong></p><p><strong>4. 和拖延做斗争，如果事情重要，从现在开始做。每天一开始，请你全力以赴做标号为“1”的事情，直到它被完成或被完全准备好，然后再全力以赴做标号为“2”的事情，以此类推</strong>。</p><p>当然这6件事是泛指，你也可以是3件事或者是4件事。视情况而定。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://q0lhqnf0a.bkt.clouddn.com/b1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;提高效率的方法——六点优先工作制&quot;&gt;&lt;a href=&quot;#提高效率的方法——六点优先工作制&quot; class=&quot;headerlink&quot; title=&quot;提高效率的方法——六点优先工作制&quot;&gt;&lt;/a&gt;提高效率的方法——六点优先工作制&lt;/h1&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2.1递归</title>
    <link href="http://yoursite.com/2019/11/04/2.1%E9%80%92%E5%BD%92/"/>
    <id>http://yoursite.com/2019/11/04/2.1递归/</id>
    <published>2019-11-04T13:46:57.720Z</published>
    <updated>2019-11-07T11:50:41.872Z</updated>
    
    <content type="html"><![CDATA[<p>2.1递归</p><p>概念：直接或间接的调用自身的算法成为递归算法。用函数自身给出定义的函数成为递归函数。</p><p>2-1阶乘函数。阶乘函数可递归的定义为<a id="more"></a></p><p>​        n！= 1（n = 0）/ n*(n-1)! (n&gt;0)</p><p>递归的特变：</p><p>1.每个递归函数都必须有非递归定义的初始值，如上式n=0，n!=1.</p><p>2.第二式用较小自变量的函数值来表示较大自变量的函数值来定义n的阶乘</p><p>3.要有临界条件</p><p>例2-1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//factorial 阶乘 阶乘的 因子的</span><br><span class="line">int factorial(int n) &#123;</span><br><span class="line">if (n == 0)</span><br><span class="line">return 1;</span><br><span class="line">return n*factorial(n-1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例2-2 斐波那契数列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">无穷数列：1,1,2,3,5,8,13,21,34......</span><br><span class="line">递归定义为</span><br><span class="line">    1                   x = 0</span><br><span class="line">f(x) =  1                   x = 1</span><br><span class="line">           f(x-1) + (x-2)      x &gt; 1</span><br><span class="line">*/</span><br><span class="line">int fibonacci(int n) &#123;</span><br><span class="line">if (n &lt;= 1)</span><br><span class="line">return 1;</span><br><span class="line">return fibonacci(n-1) + fibonacci(n-2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例2-3 Ackerman函数（双递归）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int ack(int m,int n)</span><br><span class="line">&#123;</span><br><span class="line">    if(m == 0)</span><br><span class="line">        return n+1;</span><br><span class="line">    else if(n == 0)</span><br><span class="line">        return ack(m-1,1);</span><br><span class="line">    else</span><br><span class="line">        return ack(m-1,ack(m,n-1));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例2-4  全排列问题</p><p>输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。</p><p><img src="http://q0lhqnf0a.bkt.clouddn.com/1.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">void Perm(Type list[],int k,int m) &#123;    </span><br><span class="line">if (k == m)</span><br><span class="line">&#123;</span><br><span class="line">for (int i = 0; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; list[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else &#123;</span><br><span class="line">for (int i = k; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">Swap(int k,int m);</span><br><span class="line">Perm(list,k+1,m);</span><br><span class="line">Swap(int k,int m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Swap(Type &amp;a,Type &amp;b) &#123;</span><br><span class="line">Type temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2.1递归&lt;/p&gt;
&lt;p&gt;概念：直接或间接的调用自身的算法成为递归算法。用函数自身给出定义的函数成为递归函数。&lt;/p&gt;
&lt;p&gt;2-1阶乘函数。阶乘函数可递归的定义为
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>因为热爱</title>
    <link href="http://yoursite.com/2019/10/28/%E5%9B%A0%E4%B8%BA%E7%83%AD%E7%88%B1/"/>
    <id>http://yoursite.com/2019/10/28/因为热爱/</id>
    <published>2019-10-28T12:05:11.304Z</published>
    <updated>2019-11-06T11:31:13.919Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title:博客的第一次开通</p><hr><p>欢迎大家来到我的博客，我非常高兴，能在博客分享自己的故事与经历，或许能帮助大家。</p><h2 id="所谓热爱，就是不断的坚持和投入"><a href="#所谓热爱，就是不断的坚持和投入" class="headerlink" title="所谓热爱，就是不断的坚持和投入"></a>所谓热爱，就是不断的坚持和投入<a id="more"></a></h2><p>你会不会买一本书，其实你从来不看，但是你觉得好像拥有了其中的知识？你会不会制定了一个计划，其实你从来坚持不下来，只是享受制订计划那几天的快乐？</p><p>　　我们总是习惯了这样的开始，然后又寥寥草草的结束。对事如此，对待生活也是如此，当一个人对自己的<a href="https://www.lz13.cn/mingrenmingyan/8609.html" target="_blank" rel="noopener">生命</a>开始用“潦草”来搪塞时，生命也会开始对他潦草。</p><p>　　如果跳舞，要像没有人看着那样尽兴；如果热恋，像从未受伤一样去爱；如果唱歌，像无人听着那样投入；如果活着，就把人间当天堂那般生活。</p><p>　　这个世界上有很多事，都是当你开始认真对待以后，才会发现其中包含的乐趣，你要带着关爱而不是期待地投入生活，当你对待事物越认真，对待工作越投入，你会发现能力与乐趣接踵而来。</p><p>　　因为所谓的热爱，其实就是不断的坚持和投入。</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;title:博客的第一次开通&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;欢迎大家来到我的博客，我非常高兴，能在博客分享自己的故事与经历，或许能帮助大家。&lt;/p&gt;
&lt;h2 id=&quot;所谓热爱，就是不断的坚持和投入&quot;&gt;&lt;a href=&quot;#所谓热爱，就是不断的坚持和投入&quot; class=&quot;headerlink&quot; title=&quot;所谓热爱，就是不断的坚持和投入&quot;&gt;&lt;/a&gt;所谓热爱，就是不断的坚持和投入
    
    </summary>
    
    
    
  </entry>
  
</feed>
